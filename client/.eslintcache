[{"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/index.js":"1","/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/App.js":"2","/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Matchup.js":"3","/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Vote.js":"4","/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Home.js":"5","/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/utils/api.js":"6","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/index.js":"7","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/App.js":"8","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/Home.js":"9","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/utils/product-api.js":"10","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/Login.js":"11","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/About.js":"12","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/NavigationBar.js":"13","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/utils/AppContext.js":"14","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/ProductAdmin.js":"15","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductCreateEdit.js":"16","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductDetailView.js":"17","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductCategoryView.js":"18","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/CardItem.js":"19","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/style/styles.js":"20","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/utils/user-api.js":"21","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/state/app-state-default.js":"22"},{"size":219,"mtime":1628611512410,"results":"23","hashOfConfig":"24"},{"size":553,"mtime":1628611512410,"results":"25","hashOfConfig":"24"},{"size":2418,"mtime":1628611512411,"results":"26","hashOfConfig":"24"},{"size":1848,"mtime":1628611512411,"results":"27","hashOfConfig":"24"},{"size":1503,"mtime":1629406137743,"results":"28","hashOfConfig":"24"},{"size":932,"mtime":1628611512412,"results":"29","hashOfConfig":"24"},{"size":219,"mtime":1629406809990,"results":"30","hashOfConfig":"31"},{"size":1933,"mtime":1629665088632,"results":"32","hashOfConfig":"31"},{"size":2329,"mtime":1629661397988,"results":"33","hashOfConfig":"31"},{"size":1256,"mtime":1629668127212,"results":"34","hashOfConfig":"31"},{"size":2845,"mtime":1629659452036,"results":"35","hashOfConfig":"31"},{"size":1696,"mtime":1629662912000,"results":"36","hashOfConfig":"31"},{"size":3330,"mtime":1629659390912,"results":"37","hashOfConfig":"31"},{"size":673,"mtime":1629472787846,"results":"38","hashOfConfig":"31"},{"size":2508,"mtime":1629669317071,"results":"39","hashOfConfig":"31"},{"size":7609,"mtime":1629668614036,"results":"40","hashOfConfig":"31"},{"size":5919,"mtime":1629588405412,"results":"41","hashOfConfig":"31"},{"size":2273,"mtime":1629662092116,"results":"42","hashOfConfig":"31"},{"size":859,"mtime":1629499451530,"results":"43","hashOfConfig":"31"},{"size":410,"mtime":1629632286446,"results":"44","hashOfConfig":"31"},{"size":887,"mtime":1629660255337,"results":"45","hashOfConfig":"31"},{"size":833,"mtime":1629658500979,"results":"46","hashOfConfig":"31"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"glw7ze",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"13zx36i",{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/index.js",[],"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/App.js",[],"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Matchup.js",[],"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Vote.js",[],"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Home.js",[],"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/utils/api.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/index.js",[],["97","98"],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/App.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/Home.js",["99","100"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getAllProducts } from '../utils/product-api';\nimport { Container, Col, Row, Button, Form } from 'react-bootstrap';\nimport styles from \"../components/style/styles\";\n\nconst Home = () => {\n  const [productList, setProductList] = useState([]);\n\n  useEffect(() => {\n    const getProductList = async () => {\n      try {\n        const res = await getAllProducts();\n        if (!res.ok) {\n          throw new Error('No Product List returned');\n        }\n        const productList = await res.json();\n        setProductList(productList);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getProductList();\n  }, []);\n\n  return (\n    <Container className=\"flex\" style={styles.container}>\n      <Row className=\"mb-3\" style={styles.row}>\n        <Col className=\"mb-3\" style={styles.col}>\n          <div className=\"card bg-white card-rounded w-200\">\n            <div className=\"card-header bg-dark text-center\">\n              <h3>Welcome to David OBrien's Outdoor Adventure Store!</h3>\n            </div>\n            <div className=\"card-body m-5\">\n              <h5>Check out our deals of the week:</h5>\n              <ul className=\"square\">\n                {productList.filter(product => product.is_deal).map((product) => {\n                  return (\n                    <li key={product._id}>\n                        <Link to={{ pathname: `/product/${product._id}` }}>\n                        {product.category}: {product.name}\n                      </Link>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n        </Col>\n        <Col className=\"mb-3\" style={styles.col}>\n          <h3>This should be a col alongside the card.</h3>\n        </Col>\n        <Col className=\"mb-3\" style={styles.col}>\n          <h3>This should be a col alongside the card.</h3>\n        </Col>\n\n      </Row>\n\n      <Row className=\"mb-3\" style={styles.row}>\n        <Col className=\"mb-3\" style={styles.col}>\n          <h3>This should be a col alongside the card.</h3>\n        </Col>\n        <Col className=\"mb-3\" style={styles.col}>\n          <h3>This should be a col alongside the card.</h3>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Home;\n","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/utils/product-api.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/Login.js",["101","102"],"import React, { useState, useEffect } from \"react\";\nimport { useAppContext } from \"../utils/AppContext\"\nimport { Container, Col, Row, Button, Form } from 'react-bootstrap';\nimport styles from \"../components/style/styles\";\nimport { getUserByEmail } from '../utils/user-api';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Login() {\n  const appCtx = useAppContext()\n  const history = useHistory();\n\n  //should be set by the app context\n  const [formData, setFormData] = useState([])\n  const [renderReady, setRenderReady] = useState(false)\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n  }\n\n  function validateForm() {\n    return true; //email.length > 0 && password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    let userClone = { ...appCtx.appState.user, ...formData }\n\n    //redirect the user to the home page with a welcome message\n    appCtx.setAppState({ ...appCtx.appState, user: userClone })\n\n    try {\n      const res = await getUserByEmail(userClone.email);\n\n      if (!res.ok) {\n        throw new Error('Error: Login.handleLoginSubmit ', res);\n      }\n\n      const user = await res.json();\n      console.log(user);\n      history.push(\"/\");\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  useEffect(() => {\n    setFormData(appCtx.appState.user)\n    setRenderReady(true)\n  }, [])\n\n  return (\n    <>\n      <Container className=\"flex\" style={styles.container}>\n        <Row className=\"mb-3\" style={styles.row}>\n          <Col style={styles.col}>\n            <div className=\"Message\">\n              <h2>This should occupy half the space.</h2>\n            </div>\n          </Col>\n          <Col style={styles.col}>\n            <div className=\"Login\">\n              <Form onSubmit={handleSubmit}>\n                <Form.Group size=\"lg\" controlId=\"email\">\n                  <Form.Label>email:</Form.Label>\n                  <Form.Control\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"jsmith@email.com\"\n                    value={formData.email}\n                    onChange={handleInputChange} />\n                </Form.Group>\n                <Form.Group size=\"lg\" controlId=\"password\">\n                  <Form.Label>password:</Form.Label>\n                  <Form.Control\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"xxxxxxxxxxxx\"\n                    value={formData.password}\n                    onChange={handleInputChange} />\n                </Form.Group>\n                <Button block size=\"md\" type=\"submit\" disabled={!validateForm()}>\n                  Login\n                </Button>\n              </Form>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/About.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/NavigationBar.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/utils/AppContext.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/ProductAdmin.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductCreateEdit.js",["103"],"import React from \"react\";\nimport { useState, useEffect } from \"react\"\nimport { useAppContext } from \"../utils/AppContext\"\nimport { Container, Col, Row, Button, Form } from 'react-bootstrap';\nimport { createProduct } from '../utils/product-api';\nimport styles from \"../components/style/styles\";\n\nconst ProductCreateEdit = () => {\n  const appCtx = useAppContext()\n\n  //should be set by the app context\n  const [formData, setFormData] = useState([])\n  const [renderReady, setRenderReady] = useState(false)\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n  }\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    let productClone = { ...appCtx.appState.product, ...formData }\n\n    //reflect the added product on the front page in a 'New Product' section\n    //or also reflect updates to products\n    appCtx.setAppState({ ...appCtx.appState, product: productClone })\n\n    try {\n      const res = await createProduct(productClone);\n\n      if (!res.ok) {\n        throw new Error('Error: ProductCreateEdit.createProduct ', res);\n      }\n\n      const product = await res.json();\n      console.log(product);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"In ProductCreateEdit.useEffect, appCtx\",appCtx.appState.product)\n    setFormData(appCtx.appState.product)\n    setRenderReady(true)\n  }, [])\n\n  return (\n    <>\n      {renderReady === true && (\n        <Container style={styles.container}>\n          <Form onSubmit={handleFormSubmit}>\n            <Row className=\"mb-3\" style={styles.row}>\n              <Col className=\"mb-3\" style={styles.col}>\n                <Form.Group className=\"mb-3\" controlId=\"productName\">\n                  <Form.Label>Product Name</Form.Label>\n                  <Form.Control\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"product name\"\n                    value={formData.name}\n                    onChange={handleInputChange} />\n                </Form.Group>\n              </Col>\n\n              <Col className=\"mb-3\" style={styles.col}>\n                <Form.Group className=\"mb-3\" controlId=\"description\">\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control name=\"description\"\n                    type=\"textarea\"\n                    placeholder=\"Description\"\n                    value={formData.description}\n                    onChange={handleInputChange} />\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Row className=\"mb-3\" style={styles.row}>\n              <Col className=\"mb-3\" style={styles.col}>\n                <Form.Group className=\"mb-3\" controlId=\"longDescription\">\n                  <Form.Label>Long Description</Form.Label>\n                  <Form.Control name=\"description_long\"\n                    type=\"textarea\"\n                    placeholder=\"Long Description\"\n                    style={{ height: '100px' }}\n                    value={formData.description_long}\n                    onChange={handleInputChange} />\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Row className=\"mb-3\" style={styles.row}>\n              <Col className=\"mb-3\" style={styles.col}>\n                <Form.Group controlId=\"code\">\n                  <Form.Label>Product Code</Form.Label>\n                  <Form.Control name=\"code\"\n                    type=\"text\"\n                    placeholder=\"xxxxx-xxx-xxx\"\n                    value={formData.code}\n                    onChange={handleInputChange} />\n                </Form.Group>\n              </Col>\n\n              <Col className=\"mb-3\" style={styles.col}>\n                <Form.Group controlId=\"sku\">\n                  <Form.Label>Product SKU</Form.Label>\n                  <Form.Control name=\"sku\"\n                    type=\"text\"\n                    placeholder=\"987-123-456\"\n                    value={formData.sku}\n                    onChange={handleInputChange} />\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Row className=\"mb-3\" style={styles.row}>\n              <Col className=\"mb-3\" style={styles.col}>\n                <Form.Group controlId=\"category\">\n                  <Form.Label>Category</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    name=\"category\"\n                    value={formData.category}\n                    onChange={handleInputChange}>\n                    <option>Choose...</option>\n                    <option value=\"Boots\">Boots</option>\n                    <option value=\"Camping\">Camping</option>\n                    <option value=\"Climbing\">Climbing</option>\n                    <option value=\"Clothing\">Clothing</option>\n                    <option value=\"Navigation\">Navigation</option>\n                    <option value=\"Sleeping Bags\">Sleeping Bags</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              <Col className=\"mb-3\" style={styles.col}>\n                <Form.Group controlId=\"subCategory\">\n                  <Form.Label>Sub-Category</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    name=\"sub_category\"\n                    value={formData.sub_category}\n                    onChange={handleInputChange}>\n                    <option>Choose...</option>\n                    <option value=\"Alpine\">Alpine</option>\n                    <option value=\"Mountaineering\">Mountaineering</option>\n                    <option value=\"Backpacking\">Backpacking</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Row className=\"mb-3\" style={styles.row}>\n              <Col className=\"mb-3\" style={styles.col}>\n                <Form.Group controlId=\"price\">\n                  <Form.Label>Retail Price</Form.Label>\n                  <Form.Control name=\"price\"\n                    type=\"textarea\"\n                    placeholder=\"Retail Price\"\n                    style={{ width: '50%' }}\n                    value={formData.price}\n                    onChange={handleInputChange} />\n                </Form.Group>\n              </Col>\n\n              <Col className=\"mb-3\" style={styles.col}>\n                <Form.Group controlId=\"isActive\">\n                  <Form.Label>Is Active?</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    name=\"is_active\"\n                    value={formData.is_active}\n                    onChange={handleInputChange}>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              <Col className=\"mb-3\" style={styles.col}>\n                <Form.Group controlId=\"isDeal\">\n                  <Form.Label>Is Deal?</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    name=\"is_deal\"\n                    value={formData.is_deal}\n                    onChange={handleInputChange}>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Button variant=\"primary\" type=\"submit\" onClick={handleFormSubmit}>\n              Submit\n            </Button>\n          </Form>\n        </Container>\n      )}\n    </>\n  )\n}\n\nexport default ProductCreateEdit","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductDetailView.js",["104","105"],"import React, { useState, useEffect } from 'react';\nimport { Container, Col, Row, Button, Form, Carousel } from 'react-bootstrap';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getProductById } from '../utils/product-api';\nimport { useAppContext } from \"../utils/AppContext\";\nimport styles from \"../components/style/styles\";\n\nconst ProductDetailView = () => {\n  const [renderReady, setRenderReady] = useState(false)\n  const [formData, setFormData] = useState({});\n  const { productId } = useParams();\n  const appCtx = useAppContext()\n\n  let history = useHistory();\n\n  useEffect(() => {\n    console.log(\"AppCtx\", appCtx.appState.product)\n    setFormData(appCtx.appState.product)\n\n    const getProductDetail = async () => {\n      try {\n        const res = await getProductById(productId);\n        if (!res.ok) {\n          throw new Error('No Product List returned');\n        }\n        const product = await res.json()\n        console.log(\"Product \", product)\n        setFormData(product);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    getProductDetail();\n    setRenderReady(true);\n  }, []);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  //Method will add to shopping cart, not update product\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      // console.log(product);\n      // history.push(`/product/${product._id}`);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (<>\n    {renderReady === true && (\n      <Container fluid=\"md\" style={styles.container}>\n        <Form onSubmit={handleFormSubmit}>\n          <Row className=\"mb-3\" style={styles.row}>\n            <Form.Group className=\"mb-3\" controlId=\"productName\">\n              <Form.Label>Product Name</Form.Label>\n              <Form.Control\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"product name\"\n                value={formData.name}\n                onChange={handleInputChange} />\n            </Form.Group>\n          </Row>\n          <Row className=\"mb-3\" style={styles.row}>\n            <Col style={styles.col}>\n              <Carousel className=\"d-block w-75 h-100\">\n                {formData.images.map((image) => {\n                  return (\n                    <Carousel.Item key={image.url}>\n                      <img\n                        className=\"d-block w-25 h-25\"\n                        src={process.env.PUBLIC_URL + `${image.url}`}\n                        alt={image.alt_text}\n                      />\n                      <Carousel.Caption>\n                        <h3>{image.alt_text}</h3>\n                      </Carousel.Caption>\n                    </Carousel.Item>\n                  );\n                })}\n              </Carousel>\n            </Col>\n          </Row>\n\n          <Row className=\"mb-3\" style={styles.row}>\n            <Col style={styles.col}>\n              <p>{formData.description}</p>\n            </Col>\n          </Row>\n          \n          <Row className=\"mb-3\">\n            <Form.Group as={Col} className=\"mb-3\" controlId=\"price\">\n              <Form.Label>Retail Price</Form.Label>\n              <Form.Control name=\"price\"\n                type=\"textarea\"\n                placeholder=\"Retail Price\"\n                style={{ width: '50%' }}\n                value={formData.price}\n                onChange={handleInputChange} />\n            </Form.Group>\n\n            <Form.Group as={Col} className=\"mb-3\" controlId=\"qty\">\n              <Form.Label>Quantity</Form.Label>\n              <Form.Control\n                as=\"select\"\n                name=\"category\"\n                value={1}\n                onChange={handleInputChange}>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n              </Form.Control>\n            </Form.Group>\n          </Row>\n\n          {/* <Row className=\"mb-3\">\n            <Form.Group className=\"mb-3\" controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control name=\"description\"\n                type=\"textarea\"\n                placeholder=\"Description\"\n                value={formData.description}\n                onChange={handleInputChange} />\n            </Form.Group>\n          </Row> */}\n\n          <Row className=\"mb-3\">\n            <Form.Group className=\"mb-3\" controlId=\"longDescription\">\n              <Form.Label>Long Description</Form.Label>\n              <Form.Control name=\"description_long\"\n                type=\"textarea\"\n                placeholder=\"Long Description\"\n                style={{ height: '100px' }}\n                value={formData.description_long}\n                onChange={handleInputChange} />\n            </Form.Group>\n          </Row>\n\n          <Row className=\"mb-3\">\n            <Form.Group as={Col} controlId=\"code\">\n              <Form.Label>Product Code</Form.Label>\n              <Form.Control name=\"code\"\n                type=\"text\"\n                placeholder=\"xxxxx-xxx-xxx\"\n                value={formData.code}\n                onChange={handleInputChange} />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"sku\">\n              <Form.Label>Product SKU</Form.Label>\n              <Form.Control name=\"sku\"\n                type=\"text\"\n                placeholder=\"987-123-456\"\n                value={formData.sku}\n                onChange={handleInputChange} />\n            </Form.Group>\n          </Row>\n\n          <Button variant=\"primary\" type=\"submit\" onClick={handleFormSubmit}>\n            Add To Cart\n          </Button>\n        </Form>\n      </Container>\n    )}\n  </>\n  );\n};\n\nexport default ProductDetailView;\n","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductCategoryView.js",["106"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport CardItem from './CardItem';\nimport {useParams } from 'react-router-dom';\nimport { getProductsByCategory } from '../utils/product-api';\nimport styles from \"../components/style/styles\";\n\nconst ProductCategoryView = () => {\n    const [renderReady, setRenderReady] = useState(false)\n    const [productList, setProductList] = useState([])\n    const { category } = useParams();\n\n    useEffect(() => {\n        const getProductList = async () => {\n            try {\n                const res = await getProductsByCategory(category);\n                if (!res.ok) {\n                    throw new Error('No Product List returned');\n                }\n                const products = await res.json();\n                setProductList(products);\n            } catch (err) {\n                console.error(err);\n            }\n        };\n\n        getProductList();\n        setRenderReady(true);\n\n    }, []);\n\n    return (\n        <>\n        {renderReady === true && (\n        <Container fluid=\"md\" style={styles.container}>\n            <div><Card>\n                <Card.Header><h1>Category: {category}</h1></Card.Header>\n                <Card.Body>\n                    <Card.Title>Title</Card.Title>\n                    <Card.Text>\n                        Gear for all your needs.\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n            </div>\n            <Row style={styles.row}>\n                {productList.map((product) => {\n                    return (\n                        <Col style={styles.col} key={product._id}>\n                            <CardItem title={product.name}\n                                text={product.description}\n                                price={product.price}\n                                productDetailUrl={`/product/${product._id}`}\n                                imgSrc={process.env.PUBLIC_URL + `${product.images[0].url}`}\n                                imgAltTitle={`${product.images[0].alt_text}`} />\n                        </Col>\n                    );\n                })}\n            </Row>\n        </Container>\n        )}\n        </>\n    );\n};\n\nexport default ProductCategoryView;\n","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/CardItem.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/style/styles.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/utils/user-api.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/state/app-state-default.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":4,"column":31,"nodeType":"113","messageId":"114","endLine":4,"endColumn":37},{"ruleId":"111","severity":1,"message":"115","line":4,"column":39,"nodeType":"113","messageId":"114","endLine":4,"endColumn":43},{"ruleId":"111","severity":1,"message":"116","line":14,"column":10,"nodeType":"113","messageId":"114","endLine":14,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":50,"column":6,"nodeType":"119","endLine":50,"endColumn":8,"suggestions":"120"},{"ruleId":"117","severity":1,"message":"121","line":45,"column":6,"nodeType":"119","endLine":45,"endColumn":8,"suggestions":"122"},{"ruleId":"111","severity":1,"message":"123","line":14,"column":7,"nodeType":"113","messageId":"114","endLine":14,"endColumn":14},{"ruleId":"117","severity":1,"message":"124","line":36,"column":6,"nodeType":"119","endLine":36,"endColumn":8,"suggestions":"125"},{"ruleId":"117","severity":1,"message":"126","line":30,"column":8,"nodeType":"119","endLine":30,"endColumn":10,"suggestions":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'renderReady' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'appCtx.appState.user'. Either include it or remove the dependency array.","ArrayExpression",["130"],"React Hook useEffect has a missing dependency: 'appCtx.appState.product'. Either include it or remove the dependency array.",["131"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'appCtx.appState.product' and 'productId'. Either include them or remove the dependency array.",["132"],"React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.",["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [appCtx.appState.user]",{"range":"142","text":"143"},"Update the dependencies array to be: [appCtx.appState.product]",{"range":"144","text":"145"},"Update the dependencies array to be: [appCtx.appState.product, productId]",{"range":"146","text":"147"},"Update the dependencies array to be: [category]",{"range":"148","text":"149"},[1418,1420],"[appCtx.appState.user]",[1402,1404],"[appCtx.appState.product]",[1129,1131],"[appCtx.appState.product, productId]",[1006,1008],"[category]"]