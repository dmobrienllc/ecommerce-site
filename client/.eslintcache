[{"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/index.js":"1","/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/App.js":"2","/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Matchup.js":"3","/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Vote.js":"4","/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Home.js":"5","/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/utils/api.js":"6","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/index.js":"7","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/App.js":"8","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/Home.js":"9","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/utils/product-api.js":"10","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/Login.js":"11","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/About.js":"12","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/NavigationBar.js":"13","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/utils/AppContext.js":"14","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/ProductAdmin.js":"15","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductCreateEdit.js":"16","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductDetailView.js":"17","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductCategoryView.js":"18","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/CardItem.js":"19"},{"size":219,"mtime":1628611512410,"results":"20","hashOfConfig":"21"},{"size":553,"mtime":1628611512410,"results":"22","hashOfConfig":"21"},{"size":2418,"mtime":1628611512411,"results":"23","hashOfConfig":"21"},{"size":1848,"mtime":1628611512411,"results":"24","hashOfConfig":"21"},{"size":1503,"mtime":1629406137743,"results":"25","hashOfConfig":"21"},{"size":932,"mtime":1628611512412,"results":"26","hashOfConfig":"21"},{"size":219,"mtime":1629406809990,"results":"27","hashOfConfig":"28"},{"size":2551,"mtime":1629503356269,"results":"29","hashOfConfig":"28"},{"size":1563,"mtime":1629444807533,"results":"30","hashOfConfig":"28"},{"size":1057,"mtime":1629497651624,"results":"31","hashOfConfig":"28"},{"size":1166,"mtime":1629466328019,"results":"32","hashOfConfig":"28"},{"size":115,"mtime":1629447694009,"results":"33","hashOfConfig":"28"},{"size":3081,"mtime":1629495963846,"results":"34","hashOfConfig":"28"},{"size":673,"mtime":1629472787846,"results":"35","hashOfConfig":"28"},{"size":597,"mtime":1629500569588,"results":"36","hashOfConfig":"28"},{"size":6460,"mtime":1629500867972,"results":"37","hashOfConfig":"28"},{"size":5437,"mtime":1629505198292,"results":"38","hashOfConfig":"28"},{"size":2589,"mtime":1629502667782,"results":"39","hashOfConfig":"28"},{"size":859,"mtime":1629499451530,"results":"40","hashOfConfig":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"glw7ze",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"13zx36i",{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/index.js",[],"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/App.js",[],"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Matchup.js",[],"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Vote.js",[],"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Home.js",[],"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/utils/api.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/index.js",[],["83","84"],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/App.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/Home.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/utils/product-api.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/Login.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/About.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/NavigationBar.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/utils/AppContext.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/ProductAdmin.js",["85"],"import { useState, useEffect } from \"react\"\nimport { useAppContext } from \"../utils/AppContext\"\nimport ProductCreateEdit from \"../components/ProductCreateEdit\";\n\nconst ProductAdmin = (props) => {\n  const appCtx = useAppContext()\n\n  const [ renderReady, setRenderReady ] = useState(false)\n\n  useEffect( () => {\n    setRenderReady(true);\n  }, [])\n\n  return (\n    <>\n      { renderReady === true && (\n         <>\n            <h2>Create or Edit Product</h2>\n            <ProductCreateEdit />\n         </>\n      )}\n      <style jsx=\"true\">{`\n\n      `}</style>\n    </>\n  )\n}\n\nexport default ProductAdmin","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductCreateEdit.js",["86","87"],"import React from \"react\";\nimport { useState, useEffect } from \"react\"\nimport { useAppContext } from \"../utils/AppContext\"\nimport { Container, Col, Row,Button,Form } from 'react-bootstrap';\nimport { createProduct } from '../utils/product-api';\n\nconst ProductCreateEdit = () => {\n  const appCtx = useAppContext()\n\n  const defForm = {\n    price: 0.00,\n    is_active: true,\n    name: '',\n    description: '',\n    description_long: '',\n    code: '',\n    sku: '',\n    category: '',\n    sub_category: '',\n    inventory: [{\n      cnt: 0,\n      descriptor: '',\n      unit: 0,\n      unit_type: ''\n    }],\n    images: [{\n      url: '',\n      alt_text: ''\n    }]\n  }\n\n  //should be set by the app context\n  const [formData, setFormData] = useState([])\n  //const [ formData, setFormData ] = useState(defForm)\n  const [renderReady, setRenderReady] = useState(false)\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n    console.log(\"Log: \", \"Target\", e.target.name, \"Value\", e.target.value);\n  }\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    let productClone = { ...appCtx.appState.product, ...formData }\n\n    //reflect the added product on the front page in a 'New Product' section\n    //or also reflect updates to products\n    appCtx.setAppState({ ...appCtx.appState, product: productClone })\n\n    try {\n      const res = await createProduct(productClone);\n\n      if (!res.ok) {\n        throw new Error('Error: ProductCreateEdit.createProduct ', res);\n      }\n\n      const product = await res.json();\n      console.log(product);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  useEffect(() => {\n    // Set the form data state to mirror what's in state for the user\n    setFormData(appCtx.appState.product)\n    setRenderReady(true)\n  }, [])\n\n  return (\n    <>\n      {renderReady === true && (\n        <Container>\n          <Form onSubmit={handleFormSubmit}>\n            <Row className=\"mb-3\">\n              <Form.Group className=\"mb-3\" controlId=\"productName\">\n                <Form.Label>Product Name</Form.Label>\n                <Form.Control\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"product name\"\n                  value={formData.name}\n                  onChange={handleInputChange} />\n              </Form.Group>\n            </Row>\n\n            <Row className=\"mb-3\">\n              <Form.Group as={Col} className=\"mb-3\" controlId=\"price\">\n                <Form.Label>Retail Price</Form.Label>\n                <Form.Control name=\"price\"\n                  type=\"textarea\"\n                  placeholder=\"Retail Price\"\n                  style={{ width: '50%' }}\n                  value={formData.price}\n                  onChange={handleInputChange} />\n              </Form.Group>\n\n              <Form.Group as={Col} className=\"mb-3\" controlId=\"isActive\">\n                <Form.Check type=\"checkbox\"\n                  name=\"is_active\"\n                  value={formData.is_active}\n                  label=\"Is Active?\"\n                  onChange={handleInputChange} />\n              </Form.Group>\n            </Row>\n\n            <Row className=\"mb-3\">\n              <Form.Group className=\"mb-3\" controlId=\"description\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control name=\"description\"\n                  type=\"textarea\"\n                  placeholder=\"Description\"\n                  value={formData.description}\n                  onChange={handleInputChange} />\n              </Form.Group>\n            </Row>\n\n            <Row className=\"mb-3\">\n              <Form.Group className=\"mb-3\" controlId=\"longDescription\">\n                <Form.Label>Long Description</Form.Label>\n                <Form.Control name=\"description_long\"\n                  type=\"textarea\"\n                  placeholder=\"Long Description\"\n                  style={{ height: '100px' }}\n                  value={formData.description_long}\n                  onChange={handleInputChange} />\n              </Form.Group>\n            </Row>\n\n            <Row className=\"mb-3\">\n              <Form.Group as={Col} controlId=\"code\">\n                <Form.Label>Product Code</Form.Label>\n                <Form.Control name=\"code\"\n                  type=\"text\"\n                  placeholder=\"xxxxx-xxx-xxx\"\n                  value={formData.code}\n                  onChange={handleInputChange} />\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"sku\">\n                <Form.Label>Product SKU</Form.Label>\n                <Form.Control name=\"sku\"\n                  type=\"text\"\n                  placeholder=\"987-123-456\"\n                  value={formData.sku}\n                  onChange={handleInputChange} />\n              </Form.Group>\n            </Row>\n\n            <Row className=\"mb-3\">\n              <Form.Group as={Col} controlId=\"category\">\n                <Form.Label>Category</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"category\"\n                  value={formData.category}\n                  onChange={handleInputChange}>\n                  <option>Choose...</option>\n                  <option value=\"Boots\">Boots</option>\n                  <option value=\"Camping\">Camping</option>\n                  <option value=\"Climbing\">Climbing</option>\n                  <option value=\"Clothing\">Clothing</option>\n                  <option value=\"Navigation\">Navigation</option>\n                  <option value=\"Sleeping Bags\">Sleeping Bags</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"subCategory\">\n                <Form.Label>Sub-Category</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"sub_category\"\n                  value={formData.sub_category}\n                  onChange={handleInputChange}>\n                  <option>Choose...</option>\n                  <option value=\"Alpine\">Alpine</option>\n                  <option value=\"Mountaineering\">Mountaineering</option>\n                  <option value=\"Backpacking\">Backpacking</option>\n                </Form.Control>\n              </Form.Group>\n            </Row>\n\n            <Button variant=\"primary\" type=\"submit\" onClick={handleFormSubmit}>\n              Submit\n            </Button>\n          </Form>\n        </Container>\n      )}\n    </>\n  )\n}\n\nexport default ProductCreateEdit","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductDetailView.js",["88","89"],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductCategoryView.js",["90","91","92"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport CardItem from './CardItem';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getProductsByCategory } from '../utils/product-api';\n\nconst ProductCategoryView = () => {\n    const [renderReady, setRenderReady] = useState(false)\n    const [productList, setProductList] = useState([])\n    const { category } = useParams();\n    let history = useHistory();\n\n    useEffect(() => {\n        const getProductList = async () => {\n            try {\n                const res = await getProductsByCategory(category);\n                if (!res.ok) {\n                    throw new Error('No Product List returned');\n                }\n                const products = await res.json();\n                setProductList(products);\n            } catch (err) {\n                console.error(err);\n            }\n        };\n\n        getProductList();\n        setRenderReady(true);\n\n    }, []);\n\n    const styles = {\n        container: {\n            paddingLeft: 0,\n            paddingRight: 0,\n            marginLeft: 2,\n            marginRight: 2\n        },\n        row: {\n            marginLeft: 0,\n            marginRight: 0\n        },\n        col: {\n            paddingLeft: 0,\n            paddingRight: 0,\n            marginLeft: 2,\n            marginRight: 2\n        }\n    };\n\n    return (\n        <Container fluid=\"md\" style={styles.container}>\n            <div><Card>\n                <Card.Header><h1>Category: {category}</h1></Card.Header>\n                <Card.Body>\n                    <Card.Title>Title</Card.Title>\n                    <Card.Text>\n                        Gear for all your needs.\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n            </div>\n            <Row style={styles.row}>\n                {productList.map((product) => {\n                    return (\n                        <Col style={styles.col} key={product._id}>\n                            <CardItem title={product.name}\n                                text={product.description}\n                                price={product.price}\n                                productDetailUrl={`/product/${product._id}`}\n                                imgSrc={process.env.PUBLIC_URL + `${product.images[0].url}`}\n                                imgAltTitle={`${product.images[0].alt_text}`} />\n                        </Col>\n                    );\n                })}\n            </Row>\n        </Container>\n\n    );\n};\n\nexport default ProductCategoryView;\n","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/CardItem.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":6,"column":9,"nodeType":"99","messageId":"100","endLine":6,"endColumn":15},{"ruleId":"97","severity":1,"message":"101","line":10,"column":9,"nodeType":"99","messageId":"100","endLine":10,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":68,"column":6,"nodeType":"104","endLine":68,"endColumn":8,"suggestions":"105"},{"ruleId":"97","severity":1,"message":"106","line":13,"column":7,"nodeType":"99","messageId":"100","endLine":13,"endColumn":14},{"ruleId":"102","severity":1,"message":"107","line":35,"column":6,"nodeType":"104","endLine":35,"endColumn":8,"suggestions":"108"},{"ruleId":"97","severity":1,"message":"109","line":8,"column":12,"nodeType":"99","messageId":"100","endLine":8,"endColumn":23},{"ruleId":"97","severity":1,"message":"106","line":11,"column":9,"nodeType":"99","messageId":"100","endLine":11,"endColumn":16},{"ruleId":"102","severity":1,"message":"110","line":30,"column":8,"nodeType":"104","endLine":30,"endColumn":10,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'appCtx' is assigned a value but never used.","Identifier","unusedVar","'defForm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'appCtx.appState.product'. Either include it or remove the dependency array.","ArrayExpression",["114"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'appCtx.appState.product' and 'productId'. Either include them or remove the dependency array.",["115"],"'renderReady' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [appCtx.appState.product]",{"range":"123","text":"124"},"Update the dependencies array to be: [appCtx.appState.product, productId]",{"range":"125","text":"126"},"Update the dependencies array to be: [category]",{"range":"127","text":"128"},[1815,1817],"[appCtx.appState.product]",[1079,1081],"[appCtx.appState.product, productId]",[1002,1004],"[category]"]