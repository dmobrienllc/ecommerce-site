[{"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/index.js":"1","/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/App.js":"2","/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Matchup.js":"3","/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Vote.js":"4","/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Home.js":"5","/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/utils/api.js":"6","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/index.js":"7","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/App.js":"8","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/Home.js":"9","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/utils/product-api.js":"10","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/Login.js":"11","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/About.js":"12","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/NavigationBar.js":"13","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/utils/AppContext.js":"14","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/ProductAdmin.js":"15","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductCreateEdit.js":"16","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductDetailView.js":"17","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductCategoryView.js":"18","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/CardItem.js":"19","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/style/styles.js":"20","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/utils/user-api.js":"21","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/state/app-state-default.js":"22","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/Signup.js":"23"},{"size":219,"mtime":1628611512410,"results":"24","hashOfConfig":"25"},{"size":553,"mtime":1628611512410,"results":"26","hashOfConfig":"25"},{"size":2418,"mtime":1628611512411,"results":"27","hashOfConfig":"25"},{"size":1848,"mtime":1628611512411,"results":"28","hashOfConfig":"25"},{"size":1503,"mtime":1629406137743,"results":"29","hashOfConfig":"25"},{"size":932,"mtime":1628611512412,"results":"30","hashOfConfig":"25"},{"size":266,"mtime":1629798293676,"results":"31","hashOfConfig":"32"},{"size":2034,"mtime":1629767187302,"results":"33","hashOfConfig":"32"},{"size":2898,"mtime":1629797922904,"results":"34","hashOfConfig":"32"},{"size":1256,"mtime":1629668127212,"results":"35","hashOfConfig":"32"},{"size":2799,"mtime":1629799106103,"results":"36","hashOfConfig":"32"},{"size":1986,"mtime":1629762679230,"results":"37","hashOfConfig":"32"},{"size":3500,"mtime":1629803689552,"results":"38","hashOfConfig":"32"},{"size":673,"mtime":1629472787846,"results":"39","hashOfConfig":"32"},{"size":805,"mtime":1629762570144,"results":"40","hashOfConfig":"32"},{"size":9869,"mtime":1629803018546,"results":"41","hashOfConfig":"32"},{"size":6923,"mtime":1629802863425,"results":"42","hashOfConfig":"32"},{"size":2220,"mtime":1629762234733,"results":"43","hashOfConfig":"32"},{"size":863,"mtime":1629759810289,"results":"44","hashOfConfig":"32"},{"size":410,"mtime":1629632286446,"results":"45","hashOfConfig":"32"},{"size":887,"mtime":1629660255337,"results":"46","hashOfConfig":"32"},{"size":841,"mtime":1629747682387,"results":"47","hashOfConfig":"32"},{"size":4275,"mtime":1629799118527,"results":"48","hashOfConfig":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"glw7ze",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"13zx36i",{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"63"},"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/index.js",[],"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/App.js",[],"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Matchup.js",[],"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Vote.js",[],"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/pages/Home.js",[],"/Users/davidmobrien/Documents/bootcamp/inclass/21-MERN/01-Activities/28-Stu_Mini-Project/Develop/client/src/utils/api.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/index.js",[],["100","101"],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/App.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/Home.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/utils/product-api.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/Login.js",["102"],"import React, { useState, useEffect } from \"react\";\nimport { useAppContext } from \"../utils/AppContext\"\nimport { Container, Col, Row, Button, Form } from 'react-bootstrap';\nimport styles from \"../components/style/styles\";\nimport { getUserByEmail } from '../utils/user-api';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Login() {\n  const appCtx = useAppContext()\n  const history = useHistory();\n\n  //should be set by the app context\n  const [formData, setFormData] = useState([])\n  const [renderReady, setRenderReady] = useState(false)\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n  }\n\n  function validateForm() {\n    return true;\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      const res = await getUserByEmail(formData.email);\n\n      if (!res.ok) {\n        throw new Error('Error: Login.handleLoginSubmit ', res);\n      }\n\n      const user = await res.json();\n\n      appCtx.setAppState({ ...appCtx.appState, user: user })\n      console.log(\"App Ctx User\", appCtx.appState.user)\n\n      history.push(\"/\");\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  useEffect(() => {\n    setFormData(appCtx.appState.user)\n    setRenderReady(true)\n  }, [])\n\n  return (\n    <>\n      {renderReady === true && (\n        <Container className=\"flex\" style={styles.container}>\n          <Row className=\"mb-3\" style={styles.row}>\n            <Col style={styles.col}>\n              <div className=\"Message\">\n                <h2>Login User....</h2>\n              </div>\n            </Col>\n            <Col style={styles.col}>\n              <div className=\"Login\">\n                <Form onSubmit={handleSubmit}>\n                  <Form.Group size=\"lg\" controlId=\"email\">\n                    <Form.Label>email:</Form.Label>\n                    <Form.Control\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"jsmith@email.com\"\n                      value={formData.email}\n                      onChange={handleInputChange} />\n                  </Form.Group>\n                  <Form.Group size=\"lg\" controlId=\"password\">\n                    <Form.Label>password:</Form.Label>\n                    <Form.Control\n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"xxxxxxxxxxxx\"\n                      value={formData.password}\n                      onChange={handleInputChange} />\n                  </Form.Group>\n                  <Button variant=\"dark\" size=\"md\" type=\"submit\" disabled={!validateForm()}>\n                    Login\n                  </Button>\n                </Form>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      )}\n    </>\n  );\n}","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/About.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/NavigationBar.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/utils/AppContext.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/ProductAdmin.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductCreateEdit.js",["103"],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductDetailView.js",["104","105","106","107"],"import React, { useState, useEffect } from 'react';\nimport { Container, Col, Row, Button, Form, Carousel } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { getProductById, updateProduct } from '../utils/product-api';\nimport { useAppContext } from \"../utils/AppContext\";\nimport styles from \"../components/style/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ProductDetailView = () => {\n  const [renderReady, setRenderReady] = useState(false)\n  //TODO Rename to product data as there is  no submit form involved\n  const [formData, setFormData] = useState({});\n  const [reviewFormData, setReviewFormData] = useState({})\n  const { productId } = useParams();\n  const appCtx = useAppContext()\n  const history = useHistory();\n\n  useEffect(() => {\n    console.log(\"AppCtx\", appCtx.appState.product)\n    //initialize on page entry\n    setFormData(appCtx.appState.product)\n\n    const getProductDetail = async () => {\n      try {\n        const res = await getProductById(productId);\n        if (!res.ok) {\n          throw new Error('No Product List returned');\n        }\n        const product = await res.json()\n        console.log(\"Product \", product)\n        setFormData(product);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    getProductDetail();\n    setRenderReady(true);\n  }, []);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  //Method will add to shopping cart, not update product\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      // console.log(product);\n      // history.push(`/product/${product._id}`);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleReviewInputChange = (event) => {\n    const { name, value } = event.target;\n    setReviewFormData({ ...reviewFormData, [name]: value });\n  };\n\n  const handleReviewFormSubmit = async (event) => {\n    event.preventDefault();\n\n    formData.reviews.push(reviewFormData)\n    setFormData(formData);\n\n    try {\n      const response = await updateProduct(formData);\n\n      if (!response.ok) {\n        throw new Error('Error: ProductCreateEdit.getProductByCode ', response);\n      }\n\n      const updatedProduct = await response.json();\n      history.push(`/product/${productId}`)\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (<>\n    {renderReady === true && (\n      <Container fluid=\"md\" style={styles.container}>\n        <Row className=\"mb-3\" style={styles.row}>\n          <Col style={styles.col}>\n            <h3>Product: {formData.name}</h3>\n            <h5>Description: {formData.description}</h5>\n            <p>{formData.description_long}</p>\n            <p>Retail Price: {formData.price}</p>\n          </Col>\n          <Col style={styles.col}>\n            <Carousel className=\"d-block w-75 h-100\" variant=\"dark\">\n              {formData.images.map((image) => {\n                return (\n                  <Carousel.Item key={image.url}>\n                    <img\n                      className=\"d-block w-75 h-75\"\n                      src={process.env.PUBLIC_URL + `${image.url}`}\n                      alt={image.alt_text}\n                    />\n                    <Carousel.Caption>\n                      <h3>{image.alt_text}</h3>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                );\n              })}\n            </Carousel>\n          </Col>\n        </Row>\n\n        <Row className=\"mb-3\" style={styles.row}>\n          <Col style={styles.col}>\n            <h5>Reviews: </h5>\n            {formData.reviews.map((review) => {\n              return (\n                <Row className=\"mb-3\" style={styles.row} key={review.user}>\n                  <Col style={styles.col}>\n                    <p><strong>{review.user} : {`${review.num_stars} star`}</strong></p>\n                    <p>{review.text}</p>\n                  </Col>\n                </Row>\n              )\n            })}\n          </Col>\n          <Col style={styles.col}>\n            <h5>Leave a review!</h5>\n            <Form onSubmit={handleReviewFormSubmit}>\n              <Form.Group size=\"lg\" controlId=\"email\">\n                <Form.Label>user:</Form.Label>\n                <Form.Control\n                  name=\"user\"\n                  type=\"text\"\n                  placeholder=\"jsmith\"\n                  value={reviewFormData.user}\n                  onChange={handleReviewInputChange} />\n              </Form.Group>\n              <Form.Group size=\"lg\" controlId=\"password\">\n                <Form.Label>num_stars:</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"num_stars\"\n                  value={reviewFormData.num_stars}\n                  onChange={handleReviewInputChange}>\n                  <option value=\"1\">1 star</option>\n                  <option value=\"2\">2 stars</option>\n                  <option value=\"3\">3 stars</option>\n                  <option value=\"4\">4 stars</option>\n                  <option value=\"5\">5 stars</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group size=\"lg\" controlId=\"review\">\n                <Form.Label>your review:</Form.Label>\n                <Form.Control\n                  name=\"text\"\n                  type=\"textarea\"\n                  placeholder=\"review..\"\n                  wrap={true}\n                  style={{ height: '100px' }}\n                  value={reviewFormData.text}\n                  onChange={handleReviewInputChange} />\n              </Form.Group>\n              <Button variant=\"dark\" size=\"md\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n\n        {/* <Form onSubmit={handleFormSubmit}>\n          <Row className=\"mb-3\" style={styles.row} xs={2} md={2} lg={2}>\n            <Col style={styles.col}>\n              <Form.Group as={Col} className=\"mb-3\" controlId=\"qty\">\n                <Form.Label>Quantity</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"category\"\n                  value={1}\n                  onChange={handleInputChange}>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n                  <option value=\"6\">6</option>\n                </Form.Control>\n              </Form.Group>\n            </Col>\n            <Col style={styles.col}>\n              <p>Buy one (or more!) today!</p>\n              <Button variant=\"primary\" type=\"submit\" onClick={handleFormSubmit}>\n                Add To Cart\n              </Button>\n            </Col>\n          </Row>\n        </Form> */}\n      </Container>\n    )}\n  </>\n  );\n};\n\nexport default ProductDetailView;\n","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/ProductCategoryView.js",["108"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport CardItem from './CardItem';\nimport { useParams } from 'react-router-dom';\nimport { getProductsByCategory } from '../utils/product-api';\nimport styles from \"../components/style/styles\";\n\nconst ProductCategoryView = () => {\n    const [renderReady, setRenderReady] = useState(false)\n    const [productList, setProductList] = useState([])\n    const { category } = useParams();\n\n    useEffect(() => {\n        const getProductList = async () => {\n            try {\n                const res = await getProductsByCategory(category);\n                if (!res.ok) {\n                    throw new Error('No Product List returned');\n                }\n                const products = await res.json();\n                setProductList(products);\n            } catch (err) {\n                console.error(err);\n            }\n        };\n\n        getProductList();\n        setRenderReady(true);\n\n    }, []);\n\n    return (\n        <>\n            {renderReady === true && (\n                <Container fluid=\"md\" style={styles.container}>\n                    <div><Card>\n                        <Card.Header><h1>Category: {category}</h1></Card.Header>\n                    </Card>\n                    </div>\n                    <Row style={styles.row}>\n                        {productList.map((product) => {\n                            return (\n                                <Col style={styles.col} key={product._id}>\n                                    <CardItem title={product.name}\n                                        text={product.description}\n                                        price={product.price}\n                                        productDetailUrl={`/product/${product._id}`}\n                                        imgSrc={process.env.PUBLIC_URL + `${product.images[0].url}`}\n                                        imgAltTitle={`${product.images[0].alt_text}`} />\n                                </Col>\n                            );\n                        })}\n                    </Row>\n                </Container>\n            )}\n        </>\n    );\n};\n\nexport default ProductCategoryView;\n","/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/CardItem.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/components/style/styles.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/utils/user-api.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/state/app-state-default.js",[],"/Users/davidmobrien/Documents/bootcamp/projects/ecommerce-site/client/src/pages/Signup.js",["109"],"import React, { useState, useEffect } from \"react\";\nimport { useAppContext } from \"../utils/AppContext\"\nimport { Container, Col, Row, Button, Form } from 'react-bootstrap';\nimport styles from \"../components/style/styles\";\nimport { createUser } from '../utils/user-api';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Signup() {\n  const appCtx = useAppContext()\n  const history = useHistory();\n\n  const [formData, setFormData] = useState([])\n  const [renderReady, setRenderReady] = useState(false)\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n  }\n\n  function validateForm() {\n    return true; //email.length > 0 && password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    formData.logged_in = true;\n    \n    try {\n      const res = await createUser(formData);\n\n      if (!res.ok) {\n        throw new Error('Error: Login.handleLoginSubmit ', res);\n      }\n\n      const user = await res.json();\n\n      appCtx.setAppState({ ...appCtx.appState, user: user })\n      history.push(\"/\");\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  useEffect(() => {\n    setFormData(appCtx.appState.user)\n    setRenderReady(true)\n  }, [])\n\n  return (\n    <>\n    {renderReady === true && (\n      <Container className=\"flex\" style={styles.container}>\n        <Row className=\"mb-3\" style={styles.row}>\n        <Col style={styles.col}>\n              <div className=\"Message\">\n                <h2>Sign Up Today!</h2>\n              </div>\n            </Col>\n          <Col style={styles.col}>\n            <div className=\"Signup\">\n              <Form onSubmit={handleSubmit}>\n                <Form.Group size=\"lg\" controlId=\"first_name\">\n                  <Form.Label>user name:</Form.Label>\n                  <Form.Control\n                    name=\"user_name\"\n                    type=\"text\"\n                    placeholder=\"karenlosesit\"\n                    value={formData.user_name}\n                    onChange={handleInputChange} />\n                </Form.Group>\n                <Form.Group size=\"lg\" controlId=\"first_name\">\n                  <Form.Label>first name:</Form.Label>\n                  <Form.Control\n                    name=\"first_name\"\n                    type=\"text\"\n                    placeholder=\"Karen\"\n                    value={formData.first_name}\n                    onChange={handleInputChange} />\n                </Form.Group>\n\n                <Form.Group size=\"xs\" controlId=\"first_name\">\n                  <Form.Label>middle initial:</Form.Label>\n                  <Form.Control\n                    name=\"middle_init\"\n                    type=\"text\"\n                    placeholder=\"M\"\n                    value={formData.middle_int}\n                    onChange={handleInputChange} />\n                </Form.Group>\n\n                <Form.Group size=\"lg\" controlId=\"first_name\">\n                  <Form.Label>last name:</Form.Label>\n                  <Form.Control\n                    name=\"last_name\"\n                    type=\"text\"\n                    placeholder=\"McKaren\"\n                    value={formData.last_name}\n                    onChange={handleInputChange} />\n                </Form.Group>\n\n                <Form.Group size=\"lg\" controlId=\"email\">\n                  <Form.Label>email:</Form.Label>\n                  <Form.Control\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"jsmith@email.com\"\n                    value={formData.email}\n                    onChange={handleInputChange} />\n                </Form.Group>\n\n                <Form.Group size=\"lg\" controlId=\"password\">\n                  <Form.Label>password:</Form.Label>\n                  <Form.Control\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"xxxxxxxxxxxx\"\n                    value={formData.password}\n                    onChange={handleInputChange} />\n                </Form.Group>\n                <Button size=\"sm\" variant=\"dark\"type=\"submit\" disabled={!validateForm()}>\n                  Sign Up \n                </Button>\n              </Form>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    )}\n    </>\n  );\n}",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":48,"column":6,"nodeType":"116","endLine":48,"endColumn":8,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":48,"column":13,"nodeType":"120","messageId":"121","endLine":48,"endColumn":20},{"ruleId":"114","severity":1,"message":"122","line":39,"column":6,"nodeType":"116","endLine":39,"endColumn":8,"suggestions":"123"},{"ruleId":"118","severity":1,"message":"124","line":41,"column":9,"nodeType":"120","messageId":"121","endLine":41,"endColumn":26},{"ruleId":"118","severity":1,"message":"125","line":47,"column":9,"nodeType":"120","messageId":"121","endLine":47,"endColumn":25},{"ruleId":"118","severity":1,"message":"126","line":76,"column":13,"nodeType":"120","messageId":"121","endLine":76,"endColumn":27},{"ruleId":"114","severity":1,"message":"127","line":30,"column":8,"nodeType":"116","endLine":30,"endColumn":10,"suggestions":"128"},{"ruleId":"114","severity":1,"message":"115","line":46,"column":6,"nodeType":"116","endLine":46,"endColumn":8,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'appCtx.appState.user'. Either include it or remove the dependency array.","ArrayExpression",["132"],"no-unused-vars","'product' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'appCtx.appState.product' and 'productId'. Either include them or remove the dependency array.",["133"],"'handleInputChange' is assigned a value but never used.","'handleFormSubmit' is assigned a value but never used.","'updatedProduct' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.",["134"],["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"136","fix":"142"},"Update the dependencies array to be: [appCtx.appState.user]",{"range":"143","text":"144"},"Update the dependencies array to be: [appCtx.appState.product, productId]",{"range":"145","text":"146"},"Update the dependencies array to be: [category]",{"range":"147","text":"148"},{"range":"149","text":"144"},[1269,1271],"[appCtx.appState.user]",[1339,1341],"[appCtx.appState.product, productId]",[1007,1009],"[category]",[1248,1250]]